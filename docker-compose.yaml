version: '3.9'
services:
    backend:
        build:
            context: ./web
            dockerfile: Dockerfile.Api
            args:
                - DOTNET_INSTALLED_VERSION=${DOTNET_INSTALLED_VERSION}
                - DOTNET_TIME_ZONE=${DOTNET_TIME_ZONE}
                - DOTNET_LANG_NAME=${DOTNET_LANG_NAME}
                - DOTNET_LANG_INPUTFILE=${DOTNET_LANG_INPUTFILE}
                - DOTNET_LANG_CHARMAP=${DOTNET_LANG_CHARMAP}
                - DEBIAN_FRONTEND=${DOTNET_DEBIAN_FRONTEND}
                - DOTNET_PACKAGES_PATH=${DOTNET_PACKAGES_PATH}
        image: ${CONTAINER_AUTHOR}/${PROJECT_NAME}/dotnet:${DOTNET_IMAGE_VERSION}
        container_name: ${PROJECT_NAME}_backend
        env_file:
            - ./.env
        environment:
            - DOTNET_LANG_NAME=${DOTNET_LANG_NAME}
        volumes:
            - ./logs/backend:/var/log/backend
        ports:
            - ${DOTNET_OUTER_HTTP_PORT}:${DOTNET_INNER_HTTP_PORT}
            - ${DOTNET_OUTER_HTTPS_PORT}:${DOTNET_INNER_HTTPS_PORT}
        depends_on:
            - mssql
        networks:
            product_price_tracker_common_net:
                ipv4_address: ${DOTNET_HOST_IP}
        tty: true
        restart: on-failure:3

    mssql:
        build:
            context: ./conf/mssql
            dockerfile: Dockerfile
            args:
                - MSSQL_EULA=${MSSQL_EULA}
                - MSSQL_SA_PASSWORD=${MSSQL_SA_PASSWORD}
                - MSSQL_PID=${MSSQL_PID}
        image: ${CONTAINER_AUTHOR}/${PROJECT_NAME}/mssql_${MSSQL_VERSION}
        container_name: ${PROJECT_NAME}_mssql
        volumes:
            - ./data/mssql/mssql_data:/var/opt/mssql/data
            - ./data/mssql/mssql_data_backup:/var/opt/mssql/data_backup
            - ./logs/mssql:/var/opt/mssql/log
            - ./secrets/mssql:/var/opt/mssql/secrets
        environment:
            - ACCEPT_EULA=${MSSQL_EULA}
            - SA_PASSWORD=${MSSQL_SA_PASSWORD}
            - MSSQL_PID=${MSSQL_PID}
        env_file:
            - ${ENV_FILE_PATH}
        user: root
        ports:
            - ${MSSQL_OUTER_PORT}:${MSSQL_INNER_PORT}
        networks:
            product_price_tracker_common_net:
                ipv4_address: ${MSSQL_HOST_IP}
        restart: always

    rabbitmq:
        build: ./conf/rabbitmq
        image: ${CONTAINER_AUTHOR}/${PROJECT_NAME}/rabbitmq_${RABBITMQ_VERSION}
        container_name: ${PROJECT_NAME}_rabbitmq
        env_file:
            - ${ENV_FILE_PATH}
        ports:
            - ${RABBITMQ_HOST_OUTER_PORT}:${RABBITMQ_HOST_INNER_PORT}
            - ${RABBITMQ_MANAGEMENT_HOST_OUTER_PORT}:${RABBITMQ_MANAGEMENT_HOST_INNER_PORT}
        environment:
            - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER:-celery}
            - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS:-passwd123}
            - RABBITMQ_DEFAULT_VHOST=${RABBITMQ_DEFAULT_VHOST:-my_vhost}
        networks:
            product_price_tracker_common_net:
                ipv4_address: ${RABBITMQ_HOST_IP}
        tty: true
        restart: always

networks:
    product_price_tracker_common_net:
        ipam:
            config:
                - subnet: ${NETWORK_SUBNET}
                  gateway: ${NETWORK_GATEWAY}
